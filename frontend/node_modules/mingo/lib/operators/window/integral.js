"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.$integral = void 0;
var util_1 = require("../../util");
var accumulator_1 = require("../accumulator");
var _internal_1 = require("./_internal");
/**
 * Returns the approximation of the area under a curve.
 */
function $integral(_, collection, expr, options) {
    var _a = expr.inputExpr, input = _a.input, unit = _a.unit;
    var sortKey = "$" + Object.keys(expr.parentExpr.sortBy)[0];
    // compute the points the expressions for X and Y
    var points = (0, accumulator_1.$push)(collection, [sortKey, input], options).filter(function (_a) {
        var x = _a[0], y = _a[1];
        return (0, util_1.isNumber)(+x) && (0, util_1.isNumber)(+y);
    });
    // invalid values found
    if (points.length !== collection.length)
        return null;
    var result = 0;
    var size = collection.length;
    for (var k = 1; k < size; k++) {
        var _b = points[k - 1], x1 = _b[0], y1 = _b[1];
        var _c = points[k], x2 = _c[0], y2 = _c[1];
        // convert from millis to the unit.
        var deltaX = (x2 - x1) / (_internal_1.MILLIS_PER_UNIT[unit] || 1);
        result += 0.5 * (y1 + y2) * deltaX;
    }
    return result;
}
exports.$integral = $integral;
