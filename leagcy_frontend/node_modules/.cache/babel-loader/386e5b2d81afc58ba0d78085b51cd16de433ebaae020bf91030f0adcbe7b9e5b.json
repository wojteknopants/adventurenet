{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    placement,\n    className,\n    style,\n    children,\n    arrowProps,\n    hasDoneInitialMeasure,\n    popper,\n    show,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","map":{"version":3,"names":["classNames","React","useBootstrapPrefix","useIsRTL","getOverlayDirection","getInitialPopperStyles","jsx","_jsx","jsxs","_jsxs","defaultProps","placement","Tooltip","forwardRef","_ref","ref","bsPrefix","className","style","children","arrowProps","hasDoneInitialMeasure","popper","show","props","isRTL","primaryPlacement","split","bsDirection","computedStyle","strategy","role","displayName"],"sources":["D:/1_JS_Projects/Adventurer.Net/frontend/node_modules/react-bootstrap/esm/Tooltip.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\r\nimport { getOverlayDirection } from './helpers';\r\nimport getInitialPopperStyles from './getInitialPopperStyles';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  placement: 'right'\r\n};\r\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  placement,\r\n  className,\r\n  style,\r\n  children,\r\n  arrowProps,\r\n  hasDoneInitialMeasure,\r\n  popper,\r\n  show,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\r\n  const isRTL = useIsRTL();\r\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\r\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\r\n  let computedStyle = style;\r\n  if (show && !hasDoneInitialMeasure) {\r\n    computedStyle = {\r\n      ...style,\r\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\r\n    };\r\n  }\r\n  return /*#__PURE__*/_jsxs(\"div\", {\r\n    ref: ref,\r\n    style: computedStyle,\r\n    role: \"tooltip\",\r\n    \"x-placement\": primaryPlacement,\r\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\r\n    ...props,\r\n    children: [/*#__PURE__*/_jsx(\"div\", {\r\n      className: \"tooltip-arrow\",\r\n      ...arrowProps\r\n    }), /*#__PURE__*/_jsx(\"div\", {\r\n      className: `${bsPrefix}-inner`,\r\n      children: children\r\n    })]\r\n  });\r\n});\r\nTooltip.defaultProps = defaultProps;\r\nTooltip.displayName = 'Tooltip';\r\nexport default Tooltip;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,EAAEC,QAAQ,QAAQ,iBAAiB;AAC9D,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,OAAO,GAAG,aAAaX,KAAK,CAACY,UAAU,CAAC,CAAAC,IAAA,EAW3CC,GAAG,KAAK;EAAA,IAXoC;IAC7CC,QAAQ;IACRL,SAAS;IACTM,SAAS;IACTC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,qBAAqB;IACrBC,MAAM;IACNC,IAAI;IACJ,GAAGC;EACL,CAAC,GAAAV,IAAA;EACCE,QAAQ,GAAGd,kBAAkB,CAACc,QAAQ,EAAE,SAAS,CAAC;EAClD,MAAMS,KAAK,GAAGtB,QAAQ,EAAE;EACxB,MAAM,CAACuB,gBAAgB,CAAC,GAAG,CAACf,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACgB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE;EACpF,MAAMC,WAAW,GAAGxB,mBAAmB,CAACsB,gBAAgB,EAAED,KAAK,CAAC;EAChE,IAAII,aAAa,GAAGX,KAAK;EACzB,IAAIK,IAAI,IAAI,CAACF,qBAAqB,EAAE;IAClCQ,aAAa,GAAG;MACd,GAAGX,KAAK;MACR,GAAGb,sBAAsB,CAACiB,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACQ,QAAQ;IACrE,CAAC;EACH;EACA,OAAO,aAAarB,KAAK,CAAC,KAAK,EAAE;IAC/BM,GAAG,EAAEA,GAAG;IACRG,KAAK,EAAEW,aAAa;IACpBE,IAAI,EAAE,SAAS;IACf,aAAa,EAAEL,gBAAgB;IAC/BT,SAAS,EAAEjB,UAAU,CAACiB,SAAS,EAAED,QAAQ,EAAG,cAAaY,WAAY,EAAC,CAAC;IACvE,GAAGJ,KAAK;IACRL,QAAQ,EAAE,CAAC,aAAaZ,IAAI,CAAC,KAAK,EAAE;MAClCU,SAAS,EAAE,eAAe;MAC1B,GAAGG;IACL,CAAC,CAAC,EAAE,aAAab,IAAI,CAAC,KAAK,EAAE;MAC3BU,SAAS,EAAG,GAAED,QAAS,QAAO;MAC9BG,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACFP,OAAO,CAACF,YAAY,GAAGA,YAAY;AACnCE,OAAO,CAACoB,WAAW,GAAG,SAAS;AAC/B,eAAepB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}