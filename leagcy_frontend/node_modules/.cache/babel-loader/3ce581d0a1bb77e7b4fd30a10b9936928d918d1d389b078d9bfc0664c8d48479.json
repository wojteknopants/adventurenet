{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    align,\n    rootCloseEvent,\n    flip,\n    show: showProps,\n    renderOnMount,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    popperConfig,\n    variant,\n    ...props\n  } = _ref;\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint];\n\n        // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\n\n  // For custom components provide additional, non-DOM, props;\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...menuProps,\n    style: style\n    // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"names":["classNames","React","useContext","useDropdownMenu","useIsomorphicEffect","useMergedRefs","warning","DropdownContext","InputGroupContext","NavbarContext","useBootstrapPrefix","useWrappedRefWithWarning","alignPropType","jsx","_jsx","defaultProps","flip","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","topStart","topEnd","bottomStart","bottomEnd","leftStart","leftEnd","rightStart","rightEnd","placement","DropdownMenu","forwardRef","_ref","ref","bsPrefix","className","align","rootCloseEvent","show","showProps","renderOnMount","as","Component","popperConfig","variant","props","isNavbar","prefix","contextAlign","drop","isInputGroup","alignClasses","keys","Object","process","env","NODE_ENV","length","brkPoint","direction","push","menuProps","hasShown","popper","toggle","usePopper","offset","update","close","style","displayName"],"sources":["D:/1_JS_Projects/Adventurer.Net/frontend/node_modules/react-bootstrap/esm/DropdownMenu.js"],"sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\r\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport warning from 'warning';\r\nimport DropdownContext from './DropdownContext';\r\nimport InputGroupContext from './InputGroupContext';\r\nimport NavbarContext from './NavbarContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\r\nimport { alignPropType } from './types';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  flip: true\r\n};\r\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\r\n  const topStart = isRTL ? 'top-end' : 'top-start';\r\n  const topEnd = isRTL ? 'top-start' : 'top-end';\r\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\r\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\r\n  const leftStart = isRTL ? 'right-start' : 'left-start';\r\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\r\n  const rightStart = isRTL ? 'left-start' : 'right-start';\r\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\r\n  let placement = alignEnd ? bottomEnd : bottomStart;\r\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\r\n  return placement;\r\n}\r\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  align,\r\n  rootCloseEvent,\r\n  flip,\r\n  show: showProps,\r\n  renderOnMount,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'div',\r\n  popperConfig,\r\n  variant,\r\n  ...props\r\n}, ref) => {\r\n  let alignEnd = false;\r\n  const isNavbar = useContext(NavbarContext);\r\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\r\n  const {\r\n    align: contextAlign,\r\n    drop,\r\n    isRTL\r\n  } = useContext(DropdownContext);\r\n  align = align || contextAlign;\r\n  const isInputGroup = useContext(InputGroupContext);\r\n  const alignClasses = [];\r\n  if (align) {\r\n    if (typeof align === 'object') {\r\n      const keys = Object.keys(align);\r\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\r\n      if (keys.length) {\r\n        const brkPoint = keys[0];\r\n        const direction = align[brkPoint];\r\n\r\n        // .dropdown-menu-end is required for responsively aligning\r\n        // left in addition to align left classes.\r\n        alignEnd = direction === 'start';\r\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\r\n      }\r\n    } else if (align === 'end') {\r\n      alignEnd = true;\r\n    }\r\n  }\r\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\r\n  const [menuProps, {\r\n    hasShown,\r\n    popper,\r\n    show,\r\n    toggle\r\n  }] = useDropdownMenu({\r\n    flip,\r\n    rootCloseEvent,\r\n    show: showProps,\r\n    usePopper: !isNavbar && alignClasses.length === 0,\r\n    offset: [0, 2],\r\n    popperConfig,\r\n    placement\r\n  });\r\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\r\n  useIsomorphicEffect(() => {\r\n    // Popper's initial position for the menu is incorrect when\r\n    // renderOnMount=true. Need to call update() to correct it.\r\n    if (show) popper == null ? void 0 : popper.update();\r\n  }, [show]);\r\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\r\n\r\n  // For custom components provide additional, non-DOM, props;\r\n  if (typeof Component !== 'string') {\r\n    menuProps.show = show;\r\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\r\n    menuProps.align = align;\r\n  }\r\n  let style = props.style;\r\n  if (popper != null && popper.placement) {\r\n    // we don't need the default popper style,\r\n    // menus are display: none when not shown.\r\n    style = {\r\n      ...props.style,\r\n      ...menuProps.style\r\n    };\r\n    props['x-placement'] = popper.placement;\r\n  }\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ...props,\r\n    ...menuProps,\r\n    style: style\r\n    // Bootstrap css requires this data attrib to style responsive menus.\r\n    ,\r\n    ...((alignClasses.length || isNavbar) && {\r\n      'data-bs-popper': 'static'\r\n    }),\r\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\r\n  });\r\n});\r\nDropdownMenu.displayName = 'DropdownMenu';\r\nDropdownMenu.defaultProps = defaultProps;\r\nexport default DropdownMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}