{"ast":null,"code":"import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\nfunction useRafInterval(fn, ms, paused) {\n  if (paused === void 0) {\n    paused = false;\n  }\n  var handle;\n  var start = new Date().getTime();\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n\n  var pausedRef = useCommittedRef(paused);\n  function loop() {\n    var current = new Date().getTime();\n    var delta = current - start;\n    if (pausedRef.current) return;\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n  useEffect(function () {\n    handle = requestAnimationFrame(loop);\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  }, []);\n}\nexport default useRafInterval;","map":{"version":3,"names":["useEffect","useCommittedRef","useRafInterval","fn","ms","paused","handle","start","Date","getTime","fnRef","pausedRef","loop","current","delta","cancelAnimationFrame","requestAnimationFrame"],"sources":["D:/1_JS_Projects/Adventurer.Net/leagcy_frontend/node_modules/@restart/hooks/esm/useRafInterval.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport useCommittedRef from './useCommittedRef';\r\n\r\nfunction useRafInterval(fn, ms, paused) {\r\n  if (paused === void 0) {\r\n    paused = false;\r\n  }\r\n\r\n  var handle;\r\n  var start = new Date().getTime();\r\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\r\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\r\n\r\n  var pausedRef = useCommittedRef(paused);\r\n\r\n  function loop() {\r\n    var current = new Date().getTime();\r\n    var delta = current - start;\r\n    if (pausedRef.current) return;\r\n\r\n    if (delta >= ms && fnRef.current) {\r\n      fnRef.current();\r\n      start = new Date().getTime();\r\n    }\r\n\r\n    cancelAnimationFrame(handle);\r\n    handle = requestAnimationFrame(loop);\r\n  }\r\n\r\n  useEffect(function () {\r\n    handle = requestAnimationFrame(loop);\r\n    return function () {\r\n      return cancelAnimationFrame(handle);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport default useRafInterval;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,cAAcA,CAACC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAE;EACtC,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBA,MAAM,GAAG,KAAK;EAChB;EAEA,IAAIC,MAAM;EACV,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EAChC,IAAIC,KAAK,GAAGT,eAAe,CAACE,EAAE,CAAC,CAAC,CAAC;EACjC;;EAEA,IAAIQ,SAAS,GAAGV,eAAe,CAACI,MAAM,CAAC;EAEvC,SAASO,IAAIA,CAAA,EAAG;IACd,IAAIC,OAAO,GAAG,IAAIL,IAAI,EAAE,CAACC,OAAO,EAAE;IAClC,IAAIK,KAAK,GAAGD,OAAO,GAAGN,KAAK;IAC3B,IAAII,SAAS,CAACE,OAAO,EAAE;IAEvB,IAAIC,KAAK,IAAIV,EAAE,IAAIM,KAAK,CAACG,OAAO,EAAE;MAChCH,KAAK,CAACG,OAAO,EAAE;MACfN,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IAC9B;IAEAM,oBAAoB,CAACT,MAAM,CAAC;IAC5BA,MAAM,GAAGU,qBAAqB,CAACJ,IAAI,CAAC;EACtC;EAEAZ,SAAS,CAAC,YAAY;IACpBM,MAAM,GAAGU,qBAAqB,CAACJ,IAAI,CAAC;IACpC,OAAO,YAAY;MACjB,OAAOG,oBAAoB,CAACT,MAAM,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR;AAEA,eAAeJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}